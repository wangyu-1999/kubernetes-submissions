name: exercise app GKE deployment

on:
  push:
    branches:
      - '**' 
    tags-ignore: 
      - '*'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  REGISTRY: europe-north1-docker.pkg.dev
  REPOSITORY: my-repository
  BRANCH: ${{ github.ref_name }}

jobs:
  build-publish-deploy-exercise:
    if: ${{ endsWith(github.event.head_commit.message, '#exercise-gke') }} 
    name: exercise Build, Publish and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Use gcloud CLI'
        run: gcloud info

      - run: gcloud auth configure-docker europe-north1-docker.pkg.dev --quiet

      - name: 'Get GKE credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'

      - name: Form logout image name
        run: echo "LOGOUT_IMAGE_TAG=$REGISTRY/$PROJECT_ID/$REPOSITORY/log-output:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV

      - name: Form pingpong image name
        run: echo "PINGPONG_IMAGE_TAG=$REGISTRY/$PROJECT_ID/$REPOSITORY/ping-pong:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV

      - name: Form string-generator image name
        run: echo "STRING_GENERATOR_IMAGE_TAG=$REGISTRY/$PROJECT_ID/$REPOSITORY/string-generator:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV

      - name: Build string-generator
        run: docker build -t $STRING_GENERATOR_IMAGE_TAG -f ./exercise/log-output/generator.Dockerfile ./exercise/log-output

      - name: Push string-generator
        run: docker push $STRING_GENERATOR_IMAGE_TAG

      - name: Build logout
        run: docker build -t $LOGOUT_IMAGE_TAG ./exercise/log-output

      - name: Push logout
        run: docker push $LOGOUT_IMAGE_TAG

      - name: Build pingpong
        run: docker build -t $PINGPONG_IMAGE_TAG ./exercise/ping-pong

      - name: Push pingpong
        run: docker push $PINGPONG_IMAGE_TAG

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2.1.0

      - name: Deploy
        working-directory: ./exercise
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          if [ "$BRANCH_NAME" = "main" ]; then
            NAMESPACE="exercises"
          else
            NAMESPACE="$BRANCH_NAME"
          fi
          echo "Deploying to namespace: $NAMESPACE"
          kubectl create namespace $NAMESPACE || true
          kubectl config set-context --current --namespace=$NAMESPACE
          kustomize edit set namespace $NAMESPACE

          kustomize edit set image march787/log-output=$LOGOUT_IMAGE_TAG
          kustomize edit set image march787/ping-pong=$PINGPONG_IMAGE_TAG
          kustomize edit set image march787/string-generator=$STRING_GENERATOR_IMAGE_TAG
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment log-output-dep -n $NAMESPACE
          kubectl get services -n $NAMESPACE -o wide

