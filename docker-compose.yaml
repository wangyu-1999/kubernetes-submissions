services:
  postgres:
    image: postgres:15
    container_name: local-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - shared-network
  todo-backend:
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    container_name: local-todo-backend
    environment:
      PORT: 8080
      POSTGRES_HOST: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: postgres
    ports:
      - "8080:8080"
    networks:
      - shared-network
    depends_on:
      - postgres
    volumes:
      - ./todo-backend:/app
      - /app/node_modules
    command: npm run dev
    restart: unless-stopped
  todo-app:
    build:
      context: ./todo-app
      dockerfile: dev.Dockerfile
    container_name: local-todo-app
    environment:
      PORT: 3000
      IMAGE_GENERATOR_URL: https://picsum.photos/1200
      IMAGE_NAME: 'image.jpg'
      METADATA_NAME: 'metadata.json'
      OUTPUT_FOLDER_NAME: 'cache'
    ports:
      - "3000:3000"
    networks:
      - shared-network
    depends_on:
      - todo-backend
      - postgres
    volumes:
      - ./todo-app:/app
      - /app/node_modules
    command: npm run dev
    restart: unless-stopped
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - shared-network
    depends_on:
      - todo-app
      - todo-backend
      - postgres
    restart: unless-stopped

volumes:
  pgdata:

networks:
  shared-network:
    driver: bridge
